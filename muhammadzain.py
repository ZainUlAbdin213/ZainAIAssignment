# -*- coding: utf-8 -*-
"""MuhammadZain.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1liG78-7fy-R9nxXRj5nKtXUHbDTijOy_
"""

from sklearn.datasets import fetch_openml
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.ensemble import RandomForestClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score

data = fetch_openml(name='spambase', version=1)

X, y = data.data, data.target.astype(int)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

lr_model = LogisticRegression(max_iter=1000)
lr_model.fit(X_train, y_train)
lr_train_accuracy = accuracy_score(y_train, lr_model.predict(X_train))
lr_test_accuracy = accuracy_score(y_test, lr_model.predict(X_test))

svm_model = SVC()
svm_model.fit(X_train, y_train)
svm_train_accuracy = accuracy_score(y_train, svm_model.predict(X_train))
svm_test_accuracy = accuracy_score(y_test, svm_model.predict(X_test))

rf_model = RandomForestClassifier()
rf_model.fit(X_train, y_train)
rf_train_accuracy = accuracy_score(y_train, rf_model.predict(X_train))
rf_test_accuracy = accuracy_score(y_test, rf_model.predict(X_test))

nb_model = GaussianNB()
nb_model.fit(X_train, y_train)
nb_train_accuracy = accuracy_score(y_train, nb_model.predict(X_train))
nb_test_accuracy = accuracy_score(y_test, nb_model.predict(X_test))

results = {
    'Logistic Regression': (lr_train_accuracy, lr_test_accuracy),
    'SVM': (svm_train_accuracy, svm_test_accuracy),
    'Random Forest': (rf_train_accuracy, rf_test_accuracy),
    'Naive Bayes': (nb_train_accuracy, nb_test_accuracy)
}

for method, (train_acc, test_acc) in results.items():
    print(f"{method} - Training Accuracy: {train_acc:.4f}, Testing Accuracy: {test_acc:.4f}")